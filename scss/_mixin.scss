@mixin font-heading-1 {
  font-family: "Optima", "Inter", sans-serif;
  font-size: 6.4rem;
  font-weight: 400;
  line-height: 0.86;
  letter-spacing: 0;
  @media (max-width: $md) {
    font-size: 56px;
  }
}

@mixin font-heading-2 {
  font-family: "Optima", "Inter", sans-serif;
  font-size: 1.87rem;
  font-weight: 400;
  line-height: 1.3;
  letter-spacing: 0;
  @media (max-width: $md) {
    font-size: 20px;
  }
}

@mixin font-heading-3 {
  font-family: "Optima", "Inter", sans-serif;
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 1.3;
  letter-spacing: 0;
  @media (max-width: $md) {
    font-size: 1rem;
  }
}

@mixin font-heading-4 {
  font-family: "Optima", "Inter", sans-serif;
  font-size: 1.6rem;
  font-weight: 700;
  line-height: 1.3;
  letter-spacing: 0;
  @media (max-width: $md) {
    font-size: 1.47rem;
  }
}

@mixin font-body-1 {
  font-family: "Inter", sans-serif;
  font-size: 1.04vw;
  // font-size: 15px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0;
  @media (max-width: $md) {
    font-size: 4.17vw;
  }
  @media (max-width: $xs) {
    font-size: 15px;
  }
}

@mixin font-body-2 {
  font-family: "Optima", "Inter", sans-serif;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.3;
  letter-spacing: 0;
}

@mixin font-minium {
  font-family: "Optima", "Inter", sans-serif;
  font-size: 0.8rem;
  font-weight: 400;
  line-height: 1.3;
  letter-spacing: 0;
}

@mixin font-button {
  font-family: "Optima", "Inter", sans-serif;
  font-size: 1.33rem;
  font-weight: 400;
  line-height: 1.3;
  letter-spacing: -0.002rem;
  @media (max-width: $md) {
    font-size: 1.07rem;
  }
}

@mixin font-display-1 {
  font-family: "Optima", "Inter", sans-serif;
  font-size: 8rem;
  font-weight: 400;
  line-height: 1.3;
  letter-spacing: 0;
  @media (max-width: $md) {
    font-size: 5.3rem;
    line-height: 1;
  }
}

@mixin font-display-2 {
  font-family: "Optima", "Inter", sans-serif;
  font-size: 7.47rem;
  font-weight: 400;
  line-height: 1.3;
  letter-spacing: 0;
  @media (max-width: $md) {
    font-size: 4.8rem;
    line-height: 1;
  }
}

@mixin flex($fd: row, $jc: center, $ai: center) {
  display: flex;
  flex-direction: $fd;
  justify-content: $jc;
  align-items: $ai;
}

@mixin poa($l: 0, $t: 0, $r: 0, $b: 0) {
  position: absolute;
  margin: auto;

  @if $l !=l {
    left: $l;
  } @else {
    left: auto;
  }

  @if $t !=t {
    top: $t;
  } @else {
    top: auto;
  }

  @if $r !=r {
    right: $r;
  } @else {
    right: auto;
  }

  @if $b !=b {
    bottom: $b;
  } @else {
    bottom: auto;
  }
}

@mixin fixed($l: 0, $t: 0, $r: 0, $b: 0) {
  position: fixed;
  margin: auto;

  @if $l !=l {
    left: $l;
  } @else {
    left: auto;
  }

  @if $t !=t {
    top: $t;
  } @else {
    top: auto;
  }

  @if $r !=r {
    right: $r;
  } @else {
    right: auto;
  }

  @if $b !=b {
    bottom: $b;
  } @else {
    bottom: auto;
  }
}

@mixin rect($w: 100%, $h: 100%, $bdrs: 0) {
  width: $w;
  height: $h;
  border-radius: $bdrs;
}

@mixin circle($r: 100%) {
  width: $r;
  height: $r;
  border-radius: 50%;
}

@mixin border($bc: $c-border, $bw: 1px, $bs: solid) {
  border-color: $bc;
  border-width: $bw;
  border-style: $bs;
}

@mixin beaf($c: "") {
  content: $c;
  display: block;
}

@mixin bg($bgsz: contain, $bgr: no-repeat, $bgposh: center, $bgposs: center) {
  background-size: $bgsz;
  background-repeat: $bgr;
  background-position: $bgposh $bgposs;
}

@mixin mask($bgsz: contain, $bgr: no-repeat, $bgposh: center, $bgposs: center) {
  -webkit-mask-size: $bgsz;
  -webkit-mask-repeat: $bgr;
  -webkit-mask-position: $bgposh $bgposs;
  mask-size: $bgsz;
  mask-repeat: $bgr;
  mask-position: $bgposh $bgposs;
}

@mixin img($w: auto, $h: auto) {
  @include rect($w, $h);
  @include flex;

  @if $w==auto {
    picture,
    img {
      @include rect(auto, 100%);
    }
  } @else if $h==auto {
    picture,
    img {
      @include rect(100%, auto);
    }
  } @else {
    picture,
    img {
      @include rect(100%, 100%);
    }
  }
}

@mixin ani-text($h) {
  @include rect(auto, $h);
  color: transparent;
  overflow: hidden;
  &::before,
  &::after {
    @include beaf(attr(data-text));
    @include poa(l, 0, 0, 0);
  }
  &::before {
    transform: translateY(0%) rotate(0deg);
    transition: all 0.6s $ease-outCubic;
  }
  &::after {
    transform: translateY(150%) rotate(12deg);
    transition: all 0.6s $ease-outCubic;
  }
  &:hover {
    &::before {
      transform: translateY(-150%) rotate(-12deg);
    }
    &::after {
      transform: translateY(0) rotate(0deg);
    }
  }
}

@mixin ani-text-btn($h) {
  @include flex;
  transition: background 0.6s $ease-outCubic;
  &::before,
  &::after {
    @include beaf;
    @include rect(100%, 100%, 9999px);
    @include poa(50%, 50%, r, b);
    transform: translate(-50%, -50%);
    opacity: 0;
  }
  .btn__text {
    @include rect(auto, $h);
    color: transparent;
    overflow: hidden;
    &::before,
    &::after {
      @include beaf(attr(data-text));
      @include poa(l, 0, 0, 0);
    }
    &::before {
      transform: translateY(0%) rotate(0deg);
      transition: all 0.6s $ease-outCubic;
    }
    &::after {
      transform: translateY(150%) rotate(12deg);
      transition: all 0.6s $ease-outCubic;
    }
  }

  &:hover {
    &::before {
      animation: ripple 1s $ease-outQuad;
    }
    &::after {
      animation: ripple 1s 0.5s $ease-outQuad;
    }
    .btn__text {
      &::before {
        transform: translateY(-150%) rotate(-12deg);
      }
      &::after {
        transform: translateY(0) rotate(0deg);
      }
    }
  }
}

@mixin ani-icon-btn(
  $size: 4.27rem,
  $size-m: 3.2rem,
  $ani: ripple,
  $icon: "../images/arrow.svg",
  $text: "y"
) {
  @include flex(row, flex-start, center);
  &:hover {
    .btn {
      &__icon {
        transition: background 0.6s $ease-outCubic;
        &::before {
          animation: $ani 1s $ease-outQuad;
        }
        &::after {
          animation: $ani 1s 0.5s $ease-outQuad;
        }
      }
      &__image {
        &::before {
          opacity: 0;
          @if ($icon == "../images/arrow.svg") {
            transform: translate(25%, -25%) rotate(-12deg);
          } @else {
            transform: translateY(-50%) rotate(-12deg);
          }
        }
        &::after {
          opacity: 1;
          transform: translate(0%, 0%) rotate(0deg);
        }
      }
      @if ($text == "y") {
        &__text {
          &::before {
            transform: translateY(-150%) rotate(-12deg);
          }
          &::after {
            transform: translateY(0) rotate(0deg);
          }
        }
      }
    }
  }
  .btn {
    &__icon {
      @include circle($size);
      @include flex;
      background: rgba($c-white, 0);
      transition: all 0.6s $ease-outCubic;
      @media (max-width: $md) {
        @include circle($size-m);
      }
      &::before,
      &::after {
        @include beaf;
        @include circle($size);
        @include poa(50%, 50%, r, b);
        transform: translate(-50%, -50%);
        opacity: 0;
        @media (max-width: $md) {
          @include circle($size-m);
        }
      }
    }
    &__image {
      &::before,
      &::after {
        @include beaf;
        @include rect;
        @include poa(l, 0, 0, b);
        -webkit-mask: url($icon);
        mask: url($icon);
        @include mask;
      }
      &::before {
        opacity: 1;
        transform: translate(0%, 0%) rotate(0deg);
        transition: all 0.6s $ease-outCubic;
      }
      &::after {
        opacity: 0;
        @if ($icon == "../images/arrow.svg") {
          transform: translate(-25%, 25%) rotate(12deg);
        } @else {
          transform: translateY(50%) rotate(12deg);
        }
        transition: all 0.6s $ease-outCubic;
      }
    }
    @if ($text == "y") {
      &__text {
        margin-left: 1.6rem;
        @include rect(auto, 1.73rem);
        color: transparent;
        overflow: hidden;
        @media (max-width: $md) {
          margin-left: 0.8rem;
          @include rect(auto, 1.3rem);
        }
        &::before,
        &::after {
          @include beaf(attr(data-text));
          @include poa(l, 0, 0, 0);
        }
        &::before {
          transform: translateY(0%) rotate(0deg);
          transition: all 0.6s $ease-outCubic;
        }
        &::after {
          transform: translateY(150%) rotate(12deg);
          transition: all 0.6s $ease-outCubic;
        }
      }
    }
  }
}

@keyframes ripple {
  0% {
    width: 100%;
    height: 100%;
    opacity: 1;
  }
  75%,
  100% {
    width: calc(100% + 3.2rem);
    height: calc(100% + 3.2rem);
    opacity: 0;
  }
}

@keyframes ripple-big {
  0% {
    width: 100%;
    height: 100%;
    opacity: 1;
  }
  75%,
  100% {
    width: calc(100% + 6.4rem);
    height: calc(100% + 6.4rem);
    opacity: 0;
  }
}

@mixin section-title($c: $c-gray1) {
  @include font-heading-3;
  color: $c;
  text-transform: uppercase;
  @include flex(row, flex-start);
  &::before {
    @include beaf;
    @include rect(1.6rem, 0);
    border-top: 1px solid $c;
    transform: translate(-0.27rem, -0.2rem) rotate(110deg);
    @media (max-width: $md) {
      transform: translate(-0.14rem, -0.2rem) rotate(110deg);
      @include rect(1rem, 0);
    }
  }
}
